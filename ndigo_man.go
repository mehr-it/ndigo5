package ndigo5

/*
#cgo LDFLAGS: -L/usr/local/lib -lndi.5
#include <stdlib.h>
#include "include/Processing.NDI.Lib.h"
#include "cgo_helpers.h"
*/
import "C"
import (
	"runtime"
	"unsafe"
)

// FindGetCurrentSources function as declared in include/Processing.NDI.Find.h:69
func FindGetCurrentSources(pInstance *FindInstanceT) []*SourceT {
	var noSources uint32 = 0
	pNoSources := &noSources

	cpInstance, cpInstanceAllocMap := (C.NDIlib_find_instance_t)(unsafe.Pointer(pInstance)), cgoAllocsUnknown
	cpNoSources, cpNoSourcesAllocMap := (*C.uint32_t)(unsafe.Pointer(pNoSources)), cgoAllocsUnknown
	__ret := C.NDIlib_find_get_current_sources(cpInstance, cpNoSources)
	runtime.KeepAlive(cpNoSourcesAllocMap)
	runtime.KeepAlive(cpInstanceAllocMap)

	r := make([]*SourceT, *pNoSources)
	for i := 0; i < int(*pNoSources); i++ {
		r[i] = NewSourceTRef(unsafe.Pointer(uintptr(unsafe.Pointer(__ret)) + uintptr(i)*unsafe.Sizeof(*__ret)))
	}

	return r
}

// LineStrideInBytes is not generated by c-for-go, because it is a union type.
// If the FourCC is not a compressed type, then this will be the inter-line stride of the video data
// in bytes.  If the stride is 0, then it will default to sizeof(one pixel)*xres.
func (v *VideoFrameV2T) LineStrideInBytes() int32 {
	data := v.Ref().anon0

	return *(*int32)(unsafe.Pointer(&data[0]))

}

// DataSizeInBytes
// If the FourCC is a compressed type, then this will be the size of the p_data buffer in bytes.
func (v *VideoFrameV2T) DataSizeInBytes() int32 {
	data := v.Ref().anon0

	return *(*int32)(unsafe.Pointer(&data[0]))

}
